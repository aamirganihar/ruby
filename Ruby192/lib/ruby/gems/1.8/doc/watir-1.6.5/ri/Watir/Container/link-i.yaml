--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: This is the main method for accessing a link.
- !ruby/struct:SM::Flow::VERB 
  body: " *  how   - symbol - how we access the link, :index, :id, :name, :title, :text, :url\n *  what  - string, integer or regular expression - what we are looking for,\n"
- !ruby/struct:SM::Flow::P 
  body: Valid values for 'how' are listed in the Watir Wiki - http://wiki.openqa.org/display/WTR/Methods+supported+by+Element
- !ruby/struct:SM::Flow::P 
  body: returns a Link object
- !ruby/struct:SM::Flow::P 
  body: Typical Usage
- !ruby/struct:SM::Flow::VERB 
  body: "  ie.link(:url, /login/)              # access the first link whose url matches login. We can use a string in place of the regular expression\n                                      # but the complete path must be used, ie.link(:url, 'http://myserver.com/my_path/login.asp')\n  ie.link(:index,2)                   # access the second link on the page\n  ie.link(:title, &quot;Picture&quot;)         # access a link using the tool tip\n  ie.link(:text, 'Click Me')          # access the link that has Click Me as its text\n  ie.link(:xpath, &quot;//a[contains(.,'Click Me')]/&quot;)      # access the link with Click Me as its text\n"
full_name: Watir::Container#link
is_singleton: false
name: link
params: (how, what=nil)
visibility: public
