--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  name: settings
  rw: RW
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: call
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: popen
- !ruby/object:RI::MethodSummary 
  name: popen
- !ruby/object:RI::MethodSummary 
  name: shellquote
comment: 
- !ruby/struct:SM::Flow::P 
  body: A delivery method implementation which sends via sendmail.
- !ruby/struct:SM::Flow::P 
  body: To use this, first find out where the sendmail binary is on your computer, if you are on a mac or unix box, it is usually in /usr/sbin/sendmail, this will be your sendmail location.
- !ruby/struct:SM::Flow::VERB 
  body: "  Mail.defaults do\n    delivery_method :sendmail\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: Or if your sendmail binary is not at '/usr/sbin/sendmail'
- !ruby/struct:SM::Flow::VERB 
  body: "  Mail.defaults do\n    delivery_method :sendmail, :location =&gt; '/absolute/path/to/your/sendmail'\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: "Then just deliver the email as normal:"
- !ruby/struct:SM::Flow::VERB 
  body: "  Mail.deliver do\n    to 'mikel@test.lindsaar.net'\n    from 'ada@test.lindsaar.net'\n    subject 'testing sendmail'\n    body 'testing sendmail'\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: Or by calling deliver on a Mail message
- !ruby/struct:SM::Flow::VERB 
  body: "  mail = Mail.new do\n    to 'mikel@test.lindsaar.net'\n    from 'ada@test.lindsaar.net'\n    subject 'testing sendmail'\n    body 'testing sendmail'\n  end\n\n  mail.deliver!\n"
constants: []

full_name: Mail::Sendmail
includes: 
- !ruby/object:RI::IncludedModule 
  name: Mail::CheckDeliveryParams
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: deliver!
name: Sendmail
superclass: Object
