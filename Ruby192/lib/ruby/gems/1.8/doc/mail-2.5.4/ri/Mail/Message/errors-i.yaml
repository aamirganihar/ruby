--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns a list of parser errors on the header, each field that had an error will be reparsed as an unstructured field to preserve the data inside, but will not be used for further processing.
- !ruby/struct:SM::Flow::P 
  body: It returns a nested array of [field_name, value, original_error_message] per error found.
- !ruby/struct:SM::Flow::P 
  body: "Example:"
- !ruby/struct:SM::Flow::VERB 
  body: " message = Mail.new(&quot;Content-Transfer-Encoding: weirdo\\r\\n&quot;)\n message.errors.size #=&gt; 1\n message.errors.first[0] #=&gt; &quot;Content-Transfer-Encoding&quot;\n message.errors.first[1] #=&gt; &quot;weirdo&quot;\n message.errors.first[3] #=&gt; &lt;The original error message exception&gt;\n"
- !ruby/struct:SM::Flow::P 
  body: This is a good first defence on detecting spam by the way. Some spammers send invalid emails to try and get email parsers to give up parsing them.
full_name: Mail::Message#errors
is_singleton: false
name: errors
params: ()
visibility: public
