--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The status of the server. Values are
  - !ruby/object:SM::Flow::LIST 
    contents: 
    - !ruby/struct:SM::Flow::LI 
      label: "*"
      body: stopped
    - !ruby/struct:SM::Flow::LI 
      label: "*"
      body: starting
    - !ruby/struct:SM::Flow::LI 
      label: "*"
      body: started
    - !ruby/struct:SM::Flow::LI 
      label: "*"
      body: stopping
    - !ruby/struct:SM::Flow::LI 
      label: "*"
      body: error
    type: :BULLET
  name: status
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The timeout setting for selenium in seconds
  name: timeout
  rw: R
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: on_port
comment: 
- !ruby/struct:SM::Flow::P 
  body: The class that can manages the server driver classes. This class is originally copied from the BuildMaster project. You can setup your build task to start the server before the tests and shutdown when it is finished
- !ruby/struct:SM::Flow::VERB 
  body: "  server = Selenium::Server.new()\n  begin\n    server.start\n    tests.run # run your tests here\n  ensure\n    server.stop\n  end\n"
constants: []

full_name: Selenium::Server
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: driver
- !ruby/object:RI::MethodSummary 
  name: open
- !ruby/object:RI::MethodSummary 
  name: print_log=
- !ruby/object:RI::MethodSummary 
  name: run
- !ruby/object:RI::MethodSummary 
  name: start
- !ruby/object:RI::MethodSummary 
  name: stop
name: Server
superclass: Object
